<!doctype html>
<html>
	<head>
		<meta charset="utf-8">
		<title>Jasmine Spec Runner</title>
		<% css.forEach(function(style){ %>
			<link rel="stylesheet" type="text/css" href="<%= style %>">
		<% }) %>
		<% with (scripts) { %>
			<% [].concat(jasmine, vendor, helpers).forEach(function(script){ %>
				<script src="<%= script %>"></script>
			<% }) %>
		<% }; %>
		
		<%
			var istanbul = require('istanbul');
			var instrumenter = new istanbul.Instrumenter();
			var reporter = istanbul.Report.create('html', {
				dir: options.report
			});
			var collector = new istanbul.Collector();
			phantomjs.on('jasmine.coverage', function (coverage) {
				collector.add(coverage);
				reporter.writeReport(collector, true);
			});
		%>
		<% with (scripts) { %>
			<% [].concat(src).forEach(function(script){ %>
				<script>
					<%= instrumenter.instrumentSync(grunt.file.read(script), script) %>
				</script>
			<% }) %>
		<% }; %>
		
		<% with (scripts) { %>
			<% [].concat(specs).forEach(function(script){ %>
				<script src="<%= script %>"></script>
			<% }) %>
		<% }; %>
		
		<script>
			var reporter = new jasmine.Reporter();
			reporter.reportRunnerResults = function (runner) {
				phantom.sendMessage('jasmine.coverage', __coverage__);
			};
			jasmine.getEnv().addReporter(reporter);
		</script>
		
		<% with (scripts) { %>
			<% [].concat(reporters, start).forEach(function(script){ %>
				<script src="<%= script %>"></script>
			<% }) %>
		<% }; %>
	</head>
	<body>
	</body>
</html>
